Rails -v 5.1.4

1)
  #Terminal
    - rails new  <file-name> --api -d postgresql

2)
  # ./gemfile

    Add

      - gem 'devise'

      - gem 'jwt'
        - Allows us to use JsonWebTokens

      - gem 'responders'
        - Gives us the ability to add a respond_to call into our
        ApplicationController, so that every controller which inherits from it
        knows to respond using JSON, which means we don't have to worry about
        rendering anything else.

    Uncomment

      - gem 'rack-cors'
        - Used to ignore browsers cors

3)
  # Terminal
    - rails g devise:install

4)
  # Terminal
    - rails g devise User first_name:string last_name:string
    - rake db:migrate
      - Create a new user model with all the devise properties. Also with first name
      and last name properties.


5)
  # Terminal
    - createdb rails_auth_development

6)
  # Create controller registratons_controller.rb containing:

    class RegistrationsController < ApplicationController
      respond_to :json

      def create
        if(User.exists?(email: params[:email]))
          render json: {respons: "user exists"}
        else
          user = User.create({first_name: params[:first_name], last_name: params[:last_name], email: params[:email], password: params[:password]})
          render json: token_hash(user)
        end
      end

    end

7)
  # ./config/routes.rb
    Add
      - resources :registrations

8)
  # Add to ApplicationController

  protected

  def token_hash(user)
    if(user && user.id)
      return {
        auth_token: JsonWebToken.encode(user_id: user.id),
        user: {id: user.id, first_name: user.first_name, last_name: user.last_name, email: user.email, admin: false}
      }
    else
      return nil
    end
  end

9)
  # ./lib
    Create file json_web_token.rb containing:

    class JsonWebToken
      def self.encode(payload)
        JWT.encode(payload, Rails.application.secrets.secret_key_base, "HS256")
      end

      def self.decode(token)
        return HashWithIndifferentAccess.new(
          JWT.decode(token, Rails.application.secrets.secret_key_base, true, {algorithm: "HS256"})[0]
        )
        rescue => error
          puts error
        end
      end

      "HS256" - the algorithm used to encode JWT. There are a few options but at least one must be given.

10)
  # ./config/initializers
  Create file jwt.rb containing:
    require 'json_web_token'


----- At this point you can post to the route /registrations to create a user
----- The object should include (parameter order does not matter but email must be unique)
          {
            "first_name": "james",
            "last_name": "cox",
            "email": "xxx@ex.com",
            "password": "123456789"
          }

----- The route is /registrations as the routes file is in the following state:
  Rails.application.routes.draw do
    resources :registrations
  end

----- To have the route be /users the state would be:
  Rails.application.routes.draw do
    devise_for :users, :controllers => {registrations: 'registrations'}
  end

11)
  # 
